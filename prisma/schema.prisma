// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id                  Int                  @id @default(autoincrement())
  email               String               @unique
  password            String
  avatar              String?
  messages            Message[]
  banned              Boolean?
  banReason           String?
  role                Role
  token               Token?
  chatRooms           ChatRoomsOnUsers[]
  chatRoomAddRequests ChatRoomAddRequest[]
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
}

model Message {
  id         Int       @id @default(autoincrement())
  content    String
  author     User      @relation(fields: [authorId], references: [id])
  authorId   Int
  chatRoom   ChatRoom? @relation(fields: [chatRoomId], references: [id])
  chatRoomId Int?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Token {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ChatRoom {
  id                  Int                  @id @default(autoincrement())
  uniqId              String               @unique
  creatorId           Int
  title               String
  messages            Message[]
  users               ChatRoomsOnUsers[]
  chatRoomAddRequests ChatRoomAddRequest[]
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
}

model ChatRoomsOnUsers {
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  chatRoom   ChatRoom @relation(fields: [chatRoomId], references: [id])
  chatRoomId Int
  assignedAt DateTime @default(now())

  @@id([userId, chatRoomId])
}

model ChatRoomAddRequest {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  chatRoom   ChatRoom @relation(fields: [chatRoomId], references: [id])
  chatRoomId Int
  authorId   Int
  message    String?
  createdAt  DateTime @default(now())
}
